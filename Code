<template>
    <div class="w-full">
      <!-- Top banner -->
      <div class="bg-gradient-to-r from-orange-400 to-orange-500 text-white text-center py-2 text-sm font-medium">
        Orange est là
      </div>
      
      <!-- Phone number bar -->
      <div class="bg-background border-b py-2 px-4">
        <div class="container mx-auto flex justify-end items-center text-sm">
          <span class="mr-4 text-muted-foreground">Commandez par appel au</span>
          <span class="text-xl font-bold text-primary">233 50 73 00</span>
        </div>
      </div>
  
      <!-- Main navigation -->
      <nav class="bg-background border-b shadow-sm sticky top-0 z-40 backdrop-blur-sm bg-background/95">
        <div class="container mx-auto px-4">
          <div class="flex items-center justify-between py-4">
            <!-- Logo -->
            <NuxtLink to="" class="flex items-center space-x-3 hover:opacity-80 transition-opacity">
              <div class="bg-primary p-2 rounded-lg shadow-sm">
                <ShoppingBag class="w-6 h-6 text-primary-foreground" :stroke-width="2.5" />
              </div>
              <div class="flex flex-col">
                <span class="text-xl font-bold text-foreground">Glotelho</span>
                <span class="text-xs text-muted-foreground -mt-1 hidden sm:block">ECOMMERCE</span>
              </div>
            </NuxtLink>
  
            <!-- Search bar -->
            <div class="hidden md:flex flex-1 max-w-2xl mx-8">
              <form @submit.prevent="handleSearch" class="relative w-full flex">
                <Input
                  type="text"
                  placeholder="Que recherchez-vous ?"
                  class="flex-1 rounded-r-none border-r-0 focus-visible:ring-primary"
                  v-model="searchQuery"
                />
                <Button
                  type="submit"
                  class="rounded-l-none bg-primary hover:bg-primary/90 text-primary-foreground font-medium px-6"
                >
                  <Search class="w-5 h-5 mr-2" :stroke-width="2.5" />
                  Rechercher
                </Button>
              </form>
            </div>
  
            <!-- Right side actions -->
            <div class="flex items-center space-x-2">
              <!-- Categories menu button -->
              <Sheet>
                <SheetTrigger as-child>
                  <Button variant="outline" size="sm" class="hidden sm:flex items-center space-x-2">
                    <Grid3X3 class="w-4 h-4" :stroke-width="2.5" />
                    <span class="hidden lg:inline">Catégories</span>
                  </Button>
                </SheetTrigger>
                <SheetContent side="left" class="w-96 p-0">
                  <div class="flex flex-col h-full">
                    <SheetHeader class="p-6 border-b bg-muted/30">
                      <div class="flex items-center space-x-3">
                        <div class="bg-primary p-2 rounded-lg">
                          <Grid3X3 class="w-5 h-5 text-primary-foreground" :stroke-width="2.5" />
                        </div>
                        <div>
                          <SheetTitle class="text-lg">Toutes les catégories</SheetTitle>
                          <p class="text-sm text-muted-foreground">Explorez notre catalogue</p>
                        </div>
                      </div>
                    </SheetHeader>
                    
                    <div class="flex-1 overflow-y-auto p-4">
                      <div class="space-y-2">
                        <div v-for="category in categoriesTree" :key="category.id" class="border rounded-lg">
                          <Collapsible v-model:open="category.isOpen">
                            <CollapsibleTrigger as-child>
                              <Button
                                variant="ghost"
                                class="w-full justify-between p-4 h-auto hover:bg-muted/50"
                              >
                                <div class="flex items-center space-x-3">
                                  <div class="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center">
                                    <component :is="category.icon" class="w-5 h-5 text-primary" :stroke-width="2.5" />
                                  </div>
                                  <div class="text-left">
                                    <div class="font-medium">{{ category.name }}</div>
                                    <div class="text-sm text-muted-foreground">{{ category.count }} articles</div>
                                  </div>
                                </div>
                                <ChevronRight 
                                  class="w-4 h-4 text-muted-foreground transition-transform duration-200" 
                                  :class="{ 'rotate-90': category.isOpen }"
                                  :stroke-width="2.5" 
                                />
                              </Button>
                            </CollapsibleTrigger>
                            <CollapsibleContent class="border-t bg-muted/20">
                              <div class="p-2 space-y-1">
                                <div v-for="subcategory in category.subcategories" :key="subcategory.id">
                                  <Collapsible v-model:open="subcategory.isOpen">
                                    <CollapsibleTrigger as-child>
                                      <Button
                                        variant="ghost"
                                        size="sm"
                                        class="w-full justify-between pl-6 text-left hover:bg-background"
                                      >
                                        <div class="flex items-center space-x-2">
                                          <Folder class="w-4 h-4 text-muted-foreground" :stroke-width="2.5" />
                                          <span>{{ subcategory.name }}</span>
                                        </div>
                                        <ChevronRight 
                                          class="w-3 h-3 text-muted-foreground transition-transform duration-200" 
                                          :class="{ 'rotate-90': subcategory.isOpen }"
                                          :stroke-width="2.5" 
                                        />
                                      </Button>
                                    </CollapsibleTrigger>
                                    <CollapsibleContent class="ml-8 mt-1 space-y-1">
                                      <Button
                                        variant="ghost"
                                        size="sm"
                                        class="w-full justify-start pl-6 text-muted-foreground hover:text-foreground hover:bg-muted/50"
                                        v-for="item in subcategory.items"
                                        :key="item"
                                        @click="navigateToProduct(item)"
                                      >
                                        <FileText class="w-3 h-3 mr-2" :stroke-width="2.5" />
                                        {{ item }}
                                      </Button>
                                    </CollapsibleContent>
                                  </Collapsible>
                                </div>
                              </div>
                            </CollapsibleContent>
                          </Collapsible>
                        </div>
                      </div>
                    </div>
                  </div>
                </SheetContent>
              </Sheet>
  
              <!-- Mobile hamburger menu -->
              <Sheet>
                <SheetTrigger as-child>
                  <Button
                    variant="ghost"
                    size="sm"
                    class="sm:hidden p-2"
                  >
                    <Menu class="w-6 h-6" :stroke-width="2.5" />
                    <span class="sr-only">Ouvrir le menu</span>
                  </Button>
                </SheetTrigger>
                <SheetContent side="left" class="w-80 p-0">
                  <div class="flex flex-col h-full">
                    <SheetHeader class="p-6 border-b bg-muted/30">
                      <div class="flex items-center space-x-3">
                        <div class="bg-primary p-2 rounded-lg">
                          <ShoppingBag class="w-5 h-5 text-primary-foreground" :stroke-width="2.5" />
                        </div>
                        <div>
                          <SheetTitle>Glotelho</SheetTitle>
                          <p class="text-sm text-muted-foreground">Menu principal</p>
                        </div>
                      </div>
                    </SheetHeader>
                    
                    <div class="flex-1 overflow-y-auto">
                      <!-- User section -->
                      <div class="p-4 border-b bg-muted/20" v-if="authUser">
                        <div class="flex items-center space-x-3">
                          <div class="w-10 h-10 rounded-full bg-primary/20 flex items-center justify-center">
                            <UserIcon class="w-5 h-5 text-primary" :stroke-width="2.5" />
                          </div>
                          <div>
                            <p class="font-medium">{{ authUser.username }}</p>
                            <p class="text-sm text-muted-foreground">{{ authUser.email }}</p>
                          </div>
                        </div>
                      </div>
  
                      <!-- Login section for non-authenticated users -->
                      <div class="p-4 border-b" v-else>
                        <Button class="w-full" @click="navigateTo('/connexion')">
                          <LogIn class="w-4 h-4 mr-2" :stroke-width="2.5" />
                          Se connecter
                        </Button>
                      </div>
  
                      <!-- Categories for mobile -->
                      <div class="p-4">
                        <h3 class="font-semibold mb-4 flex items-center">
                          <Grid3X3 class="w-5 h-5 mr-2 text-primary" :stroke-width="2.5" />
                          Catégories
                        </h3>
                        <!-- Tree structure for mobile -->
                        <div class="space-y-1">
                          <div v-for="category in categoriesTree" :key="category.id">
                            <Collapsible v-model:open="category.isOpenMobile">
                              <CollapsibleTrigger as-child>
                                <Button
                                  variant="ghost"
                                  class="w-full justify-between p-3 h-auto hover:bg-muted/50"
                                >
                                  <div class="flex items-center space-x-3">
                                    <component :is="category.icon" class="w-5 h-5 text-primary" :stroke-width="2.5" />
                                    <span class="font-medium">{{ category.name }}</span>
                                  </div>
                                  <ChevronRight 
                                    class="w-4 h-4 transition-transform duration-200" 
                                    :class="{ 'rotate-90': category.isOpenMobile }"
                                    :stroke-width="2.5" 
                                  />
                                </Button>
                              </CollapsibleTrigger>
                              <CollapsibleContent class="ml-4 mt-1 space-y-1">
                                <div v-for="subcategory in category.subcategories" :key="subcategory.id">
                                  <Collapsible v-model:open="subcategory.isOpenMobile">
                                    <CollapsibleTrigger as-child>
                                      <Button
                                        variant="ghost"
                                        size="sm"
                                        class="w-full justify-between pl-4 hover:bg-muted/30"
                                      >
                                        <div class="flex items-center space-x-2">
                                          <Folder class="w-4 h-4 text-muted-foreground" :stroke-width="2.5" />
                                          <span>{{ subcategory.name }}</span>
                                        </div>
                                        <ChevronRight 
                                          class="w-3 h-3 transition-transform duration-200" 
                                          :class="{ 'rotate-90': subcategory.isOpenMobile }"
                                          :stroke-width="2.5" 
                                        />
                                      </Button>
                                    </CollapsibleTrigger>
                                    <CollapsibleContent class="ml-6 mt-1 space-y-1">
                                      <Button
                                        variant="ghost"
                                        size="sm"
                                        class="w-full justify-start text-muted-foreground hover:text-foreground"
                                        v-for="item in subcategory.items"
                                        :key="item"
                                        @click="navigateToProduct(item)"
                                      >
                                        {{ item }}
                                      </Button>
                                    </CollapsibleContent>
                                  </Collapsible>
                                </div>
                              </CollapsibleContent>
                            </Collapsible>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </SheetContent>
              </Sheet>
  
              <!-- User account -->
              <DropdownMenu v-if="authUser">
                <DropdownMenuTrigger as-child>
                  <Button variant="outline" size="sm" class="hidden sm:flex items-center space-x-2">
                    <div class="w-8 h-8 rounded-full bg-primary/20 flex items-center justify-center">
                      <UserIcon class="w-4 h-4 text-primary" :stroke-width="2.5" />
                    </div>
                    <div class="text-left hidden lg:block">
                      <div class="text-sm font-medium">{{ authUser.username }}</div>
                      <div class="text-xs text-muted-foreground">Mon compte</div>
                    </div>
                    <ChevronDown class="w-4 h-4 hidden lg:block" :stroke-width="2.5" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end" class="w-56">
                  <div class="px-3 py-2 border-b">
                    <p class="font-medium">{{ authUser.username }}</p>
                    <p class="text-sm text-muted-foreground">{{ authUser.email }}</p>
                    <p class="text-sm text-muted-foreground" v-if="authUser.phoneNumber">
                      {{ authUser.phoneNumber }}
                    </p>
                  </div>
                  <DropdownMenuItem @click="navigateTo('/profil')">
                    <UserIcon class="w-4 h-4 mr-2" :stroke-width="2.5" />
                    Mon profil
                  </DropdownMenuItem>
                  <DropdownMenuItem @click="navigateTo('/commandes')">
                    <Package class="w-4 h-4 mr-2" :stroke-width="2.5" />
                    Mes commandes
                  </DropdownMenuItem>
                  <DropdownMenuItem @click="navigateTo('/favoris')">
                    <Heart class="w-4 h-4 mr-2" :stroke-width="2.5" />
                    Mes favoris
                  </DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem @click="handleLogout" class="text-destructive">
                    <LogOut class="w-4 h-4 mr-2" :stroke-width="2.5" />
                    Se déconnecter
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
  
              <!-- Login button when not connected -->
              <Button
                v-else
                variant="outline"
                size="sm"
                class="hidden sm:flex items-center space-x-2"
                @click="navigateTo('/connexion')"
              >
                <LogIn class="w-4 h-4" :stroke-width="2.5" />
                <span class="hidden lg:inline">Connexion</span>
              </Button>
  
              <!-- Cart -->
              <Button
                variant="outline"
                size="sm"
                class="relative"
                @click="navigateTo('/panier')"
              >
                <ShoppingCart class="w-5 h-5" :stroke-width="2.5" />
                <Badge
                  v-if="cartCount > 0"
                  class="absolute -top-2 -right-2 bg-destructive hover:bg-destructive text-destructive-foreground text-xs min-w-[20px] h-5 flex items-center justify-center p-0 font-semibold"
                >
                  {{ cartCount }}
                </Badge>
                <span class="hidden lg:inline ml-2 text-sm">Panier</span>
              </Button>
            </div>
          </div>
  
          <!-- Mobile search -->
          <div class="md:hidden pb-4">
            <form @submit.prevent="handleSearch" class="relative flex">
              <Input
                type="text"
                placeholder="Que recherchez-vous ?"
                class="flex-1 rounded-r-none border-r-0 focus-visible:ring-primary"
                v-model="searchQuery"
              />
              <Button
                type="submit"
                class="rounded-l-none bg-primary hover:bg-primary/90 text-primary-foreground px-4"
              >
                <Search class="w-5 h-5" :stroke-width="2.5" />
              </Button>
            </form>
          </div>
        </div>
      </nav>
  
      <!-- Promotions bar -->
      <div class="bg-muted/30 border-b overflow-x-auto">
        <div class="container mx-auto px-4">
          <div class="flex items-center space-x-6 py-3 text-sm whitespace-nowrap">
            <NuxtLink 
              v-for="promo in promotions" 
              :key="promo.id"
              :to="promo.link"
              class="flex items-center space-x-2 cursor-pointer hover:text-primary transition-colors"
            >
              <component :is="promo.icon" class="w-4 h-4 text-primary" :stroke-width="2.5" />
              <span class="font-medium">{{ promo.title }}</span>
              <Badge variant="secondary" class="text-xs">{{ promo.discount }}</Badge>
            </NuxtLink>
          </div>
        </div>
      </div>

    </div>
  </template>
  
  <script setup lang="ts">
  import { ref } from 'vue'
  import { useAuth } from '~/composables/useAuth'
  import { navigateTo } from '#app'
//   import { useHead } from '#head'
  import type { User } from '~/types/auth'
  import { Flame, Zap, Star, Percent, Clock, Monitor, ChefHat, Wind, Grid3X3, ShoppingCart, Search, Folder, FileText, UserIcon, Package, Heart, LogOut, Menu } from 'lucide-vue-next'
  import { Button } from '@/components/ui/button'
  import { Input } from '@/components/ui/input'
  import { Badge } from '@/components/ui/badge'
  
  // Auth composable
  const { user: authUser, logout } = useAuth()
  
  // Reactive data
  const searchQuery = ref('')
  const cartCount = ref(0)
  
  // Promotions data
  const promotions = ref([
    { id: 1, title: 'MEILLEURES VENTES', icon: Flame, discount: 'TOP', link: '/meilleures-ventes' },
    { id: 2, title: 'OFFRES FLASH', icon: Zap, discount: '-50%', link: '/offres-flash' },
    { id: 3, title: 'NOUVEAUTÉS', icon: Star, discount: 'NEW', link: '/nouveautes' },
    { id: 4, title: 'LIQUIDATION', icon: Percent, discount: '-70%', link: '/liquidation' },
    { id: 5, title: 'DERNIÈRE CHANCE', icon: Clock, discount: '24H', link: '/derniere-chance' }
  ])
  
  // Categories tree structure with reactive open states
  const categoriesTree = ref([
    {
      id: 1,
      name: 'Électronique',
      icon: Monitor,
      count: 0,
      isOpen: false,
      isOpenMobile: false,
      subcategories: [
        {
          id: 11,
          name: 'Smartphones & Tablettes',
          isOpen: false,
          isOpenMobile: false,
          items: ['iPhone', 'Samsung Galaxy', 'iPad', 'Tablettes Android', 'Accessoires mobiles']
        },
        {
          id: 12,
          name: 'Ordinateurs',
          isOpen: false,
          isOpenMobile: false,
          items: ['Ordinateurs portables', 'PC de bureau', 'MacBook', 'Accessoires PC']
        }
      ]
    },
    {
      id: 2,
      name: 'Électroménager',
      icon: ChefHat,
      count: 0,
      isOpen: false,
      isOpenMobile: false,
      subcategories: [
        {
          id: 21,
          name: 'Gros électroménager',
          isOpen: false,
          isOpenMobile: false,
          items: ['Réfrigérateurs', 'Cuisinières', 'Lave-linge', 'Lave-vaisselle']
        },
        {
          id: 22,
          name: 'Petit électroménager',
          isOpen: false,
          isOpenMobile: false,
          items: ['Micro-ondes', 'Mixeurs', 'Cafetières', 'Grille-pain']
        }
      ]
    },
    {
      id: 3,
      name: 'Climatisation',
      icon: Wind,
      count: 0,
      isOpen: false,
      isOpenMobile: false,
      subcategories: [
        {
          id: 31,
          name: 'Climatiseurs',
          isOpen: false,
          isOpenMobile: false,
          items: ['Split', 'Portables', 'Centralisés', 'Inverter']
        },
        {
          id: 32,
          name: 'Ventilation',
          isOpen: false,
          isOpenMobile: false,
          items: ['Ventilateurs de plafond', 'Ventilateurs sur pied', 'Extracteurs']
        }
      ]
    }
  ])
  
  // Methods
  const handleSearch = async () => {
    if (searchQuery.value.trim()) {
      await navigateTo(`/recherche?q=${encodeURIComponent(searchQuery.value)}`)
    }
  }
  
  const navigateToProduct = async (product: string) => {
    await navigateTo(`/produit/${encodeURIComponent(product.toLowerCase().replace(/\s+/g, '-'))}`)
  }
  
  const handleLogout = async () => {
    try {
      await logout()
      await navigateTo('/')
    } catch (error) {
      console.error('Erreur lors de la déconnexion:', error)
    }
  }
  
  // SEO
  /* useHead({
    title: 'Glotelho - Votre marketplace de confiance',
    meta: [
      { name: 'description', content: 'Découvrez notre large gamme de produits électroniques, électroménager et bien plus encore sur Glotelho.' }
    ]
  }) */
  
  console.log('Navbar chargée')
  </script>
  
  <style scoped>
  .container {
    max-width: 1200px;
  }
  
  /* Custom scrollbar */
  .overflow-x-auto::-webkit-scrollbar {
    height: 4px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-track {
    background: hsl(var(--muted));
  }
  
  .overflow-x-auto::-webkit-scrollbar-thumb {
    background: hsl(var(--primary));
    border-radius: 2px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--primary) / 0.8);
  }
  </style>
  
